# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Appointment {
  appointment_date: Timestamp!
  appointment_id: ID!
  appointment_type: String!
  created_at: Timestamp!
  doctor_id: Int!
  is_anonymous: Boolean!
  patient_id: Int!
  schedule_id: Int!
  status: String!
  updated_at: Timestamp
}

input CreateAppointmentInput {
  appointment_date: Timestamp!
  appointment_type: String!
  doctor_id: Int!
  is_anonymous: Boolean! = false
  patient_id: Int!
  schedule_id: Int!
  status: String!
}

input CreateDoctorDto {
  hospital: String
  qualifications: String
  specialty: String
  user_id: String!
  work_seniority: Int
}

input CreateDoctorDto_Schedules {
  doctor_id: Int!
  end_time: Date
  is_available: Boolean
  start_time: Date
}

input CreateMedicationInput {
  acronym: String!
  available_quantity: Float!
  name: String!
  price: Float!
}

input CreatePatientInput {
  anonymous_id: String!
  date_of_birth: Date!
  gender: String!
  hiv_diagnosis_date: Date!
  user_id: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

input DeleteAppointmentInput {
  appointment_id: Int!
}

input DeletePatientInput {
  patient_id: Int!
}

type Doctor {
  """Creation date of the doctor record"""
  created_at: Date!
  hospital: String
  id: String!
  qualifications: String

  """Doctor's schedule (if any)"""
  schedule: DoctorSchedule
  specialty: String

  """Last update date of the doctor record"""
  updated_at: Date

  """Related user information"""
  user: User!
  user_id: String!
  work_seniority: Int
}

type DoctorSchedule {
  """Creation date of the user record"""
  created_at: Date!
  doctor_id: Int!
  end_time: Date
  id: Int!
  is_available: Boolean
  start_time: Date
}

input GetAppointmentByIdInput {
  appointment_id: Int!
}

input GetMedicationByIdInput {
  id: Float!
}

input GetPatientByIdInput {
  patient_id: Int!
}

input GetUserByIdInput {
  """ID of the user to retrieve"""
  id: ID!
}

input LoginDto {
  email: String!
  password: String!
}

type LoginResponse {
  accessToken: String
  refreshToken: String
}

type Medication {
  acronym: String!
  available_quantity: Int!
  created_at: Date!
  id: Int!
  name: String!
  price: Float!
  updated_at: Date!
}

type Mutation {
  createAppointment(input: CreateAppointmentInput!): Appointment!
  createDoctor(doctorData: CreateDoctorDto!): Doctor!
  createDoctorSchedule(doctorData: CreateDoctorDto_Schedules!): DoctorSchedule!
  createMedication(input: CreateMedicationInput!): Medication!
  createPatient(input: CreatePatientInput!): Patient!
  deleteAppointment(input: DeleteAppointmentInput!): Boolean!
  deleteDoctor(id: Float!): Doctor!
  deleteDoctorSchedule(id: Int!): DoctorSchedule!
  deleteMedication(id: Int!): Medication!
  deletePatient(input: DeletePatientInput!): Boolean!

  """Xóa người dùng"""
  deleteUser(id: String!): User!
  login(userData: LoginDto!): LoginResponse!
  register(userData: RegisterDto!): User!
  updateDoctor(doctorData: CreateDoctorDto!, id: Float!): Doctor!
  updateDoctorSchedule(doctorData: CreateDoctorDto_Schedules!, id: Int!): DoctorSchedule!
  updateMedication(id: Int!, input: UpdateMedicationInput!): Medication!
  updatePatient(input: UpdatePatientInput!): Patient!

  """Cập nhật thông tin người dùng"""
  updateUser(id: String!, input: UpdateUserInput!): User!
}

input PaginationInput {
  limit: Int! = 10
  page: Int! = 1
}

type Patient {
  anonymous_id: String!
  created_at: Timestamp!
  date_of_birth: Date!
  gender: String!
  hiv_diagnosis_date: Date!
  patient_id: ID!
  updated_at: Timestamp
  user_id: String!
}

type Query {
  doctor(id: Float!): Doctor
  doctorSchedules: [DoctorSchedule!]!
  doctors: [Doctor!]!
  findAllAppointments: [Appointment!]!
  findAllPatients: [Patient!]!
  findOneAppointment(input: GetAppointmentByIdInput!): Appointment!
  findOnePatient(input: GetPatientByIdInput!): Patient!
  getAllUsers(pagination: PaginationInput): UserPaginationResponse!

  """Lấy thông tin người dùng theo email"""
  getUserByEmail(email: String!): User!

  """Lấy thông tin người dùng theo ID"""
  getUserById(input: GetUserByIdInput!): User!
  medication(input: GetMedicationByIdInput!): Medication!
  medications: [Medication!]!
  searchMedications(input: SearchMedicationsInput!): [Medication!]!
}

input RegisterDto {
  address: String
  date_of_birth: Date
  email: String!
  full_name: String!
  gender: String!
  password: String!
  phone: String

  """Role of the user"""
  role: String = "USER"
}

input SearchMedicationsInput {
  keyword: String!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UpdateMedicationInput {
  acronym: String
  available_quantity: Int
  name: String
  price: Int
}

input UpdatePatientInput {
  anonymous_id: String
  date_of_birth: Date
  gender: String
  hiv_diagnosis_date: Date
  patient_id: Int!
}

input UpdateUserInput {
  address: String
  date_of_birth: Date
  email: String
  full_name: String
  gender: String
  password: String
  phone: String
}

type User {
  """Address of the user"""
  address: String

  """Creation date of the user record"""
  created_at: Date!

  """Date of birth of the user"""
  date_of_birth: Date
  email: String!

  """Full name of the user"""
  full_name: String!

  """Gender of the user"""
  gender: String

  """Unique identifier for the user"""
  id: ID!
  password: String!

  """Phone number of the user"""
  phone: String

  """Role of the user"""
  role: String

  """Last update date of the user record"""
  updated_at: Date
}

type UserPaginationResponse {
  currentPage: Int!
  data: [User!]!
  itemsPerPage: Int!
  total: Int!
}